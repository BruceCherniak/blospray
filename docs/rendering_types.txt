server <- client
server -> client

---------------------------------------------------------------------

[User presses F12]
<- UPDATE_....
    scene objects
    camera
<- ClientMessage START_RENDERING
    type=FINAL
    resolution
    number of samples S
-> RenderResult FRAME (times S)
    32-bit floating point
-> RenderResult DONE

[User cancels rendering]
<- ClientMessage CANCEL_RENDERING
-> RenderResult FRAME [zero or more]
-> RenderResult CANCELED

---------------------------------------------------------------------

[User switches to interactive rendering]
<- UPDATE_....
    scene objects
    camera
<- ClientMessage START_RENDERING
    type=INTERACTIVE
    viewport resolution
    initial resolution factor
    number of samples S
-> RenderResult FRAME (times S)
    8-bit SRGBA or 32-bit floating point?
-> RenderResult DONE
    
[scene/camera updated]
<- UPDATE_...
# Server stops rendering automatically after receiving first UPDATE_ message
# when interactive rendering is active. Client needs to restart rendering itself
<- ClientMessage START_RENDERING
    viewport resolution
    initial resolution factor
    max. number of samples S
-> RenderResult FRAME (times S)
-> RenderResult DONE
    
[viewport changed]
<- UPDATE camera
<- ClientMessage START_RENDERING
    viewport resolution
    max. number of samples S
-> RenderResult FRAME (times S)
-> RenderResult DONE
    
[User switches out of interactive rendering]
<- ClientMessage CANCEL_RENDERING
-> RenderResult FRAME [zero or more]
-> RenderResult CANCELED
